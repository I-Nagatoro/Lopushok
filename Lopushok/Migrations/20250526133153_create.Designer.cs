// <auto-generated />
using Lopushok;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lopushok.Migrations
{
    [DbContext(typeof(RemoteDatabaseContext))]
    [Migration("20250526133153_create")]
    partial class create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lopushok.Models.MaterialDAO", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaterialId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric")
                        .HasColumnName("cost");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("material_name");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("material_type");

                    b.Property<int>("MinRemaining")
                        .HasColumnType("integer")
                        .HasColumnName("min_remaining");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("package_quantity");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("stock_quantity");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unit");

                    b.HasKey("MaterialId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("materials", "lopushok");
                });

            modelBuilder.Entity("Lopushok.Models.MaterialTypeDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("material_type");

                    b.HasKey("Id");

                    b.ToTable("material_types", "lopushok");
                });

            modelBuilder.Entity("Lopushok.Models.ProductDAO", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("article");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_path");

                    b.Property<decimal?>("MinAgentCost")
                        .HasColumnType("numeric")
                        .HasColumnName("min_agent_cost");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("product_type");

                    b.Property<int>("WorkersRequired")
                        .HasColumnType("integer")
                        .HasColumnName("workers_required");

                    b.Property<int>("WorkshopNumber")
                        .HasColumnType("integer")
                        .HasColumnName("workshop_number");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("products", "lopushok");
                });

            modelBuilder.Entity("Lopushok.Models.ProductMaterialDAO", b =>
                {
                    b.Property<int>("ProductMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("product_material_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductMaterialId"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("RequiredQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("required_quantity");

                    b.HasKey("ProductMaterialId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("product_materials", "lopushok");
                });

            modelBuilder.Entity("Lopushok.Models.ProductTypeDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_type");

                    b.HasKey("Id");

                    b.ToTable("product_types", "lopushok");
                });

            modelBuilder.Entity("Lopushok.Models.MaterialDAO", b =>
                {
                    b.HasOne("Lopushok.Models.MaterialTypeDAO", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("Lopushok.Models.ProductDAO", b =>
                {
                    b.HasOne("Lopushok.Models.ProductTypeDAO", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Lopushok.Models.ProductMaterialDAO", b =>
                {
                    b.HasOne("Lopushok.Models.MaterialDAO", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lopushok.Models.ProductDAO", "Product")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lopushok.Models.ProductDAO", b =>
                {
                    b.Navigation("ProductMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
